package WebTest::Tester;
use Moose;
use feature ':5.10';

use File::Find::Rule;
use TAP::Parser;
use File::Spec;
use File::stat;
use Carp;

has directory => (
   is       => 'rw',
   isa      => 'Str',
   required => 1,
   reader   => 'get_directory',
   writer   => 'set_directory',
);

sub tests {
   my $self  = shift;
   my @files = File::Find::Rule->file()->name('*.t')
      ->in( File::Spec->catdir( $self->get_directory, 't' ) );

   my @tests;

   foreach my $file (@files) {
      my $parser = TAP::Parser->new( { source => $file } );
      RESULTS:
      while ( my $result = $parser->next ) {
         if (!$result->is_test) { next RESULT; }
         push @tests, {
            type         => $result->type,
            as_string    => $result->as_string,
            is_plan      => $result->is_plan,
               #plan         => $result->plan,
            is_test      => $result->is_test,
               #ok           => $result->ok,
               #is_ok        => $result->is_ok,
            is_comment   => $result->is_comment,
               #comment      => $result->comment,
            is_bailout   => $result->is_bailout,
            is_yaml      => $result->is_yaml,
            is_unknown   => $result->is_unknown,
            is_ok        => $result->is_ok,
            directive    => $result->directive,
            explanation  => $result->explanation,
            explanation  => $result->explanation,
            #number       => $result->number,
            #description  => $result->description,
            #explanation  => $result->explanation,
            #is_actual_ok => $result->is_actual_ok,
            #is_unplanned => $result->is_unplanned,
            #has_skip     => $result->has_skip,
            #has_todo     => $result->has_todo,
            #in_todo      => $result->in_todo,
         };
      }
   }

   return \@tests;
}

no Moose;
__PACKAGE__->meta->make_immutable;
